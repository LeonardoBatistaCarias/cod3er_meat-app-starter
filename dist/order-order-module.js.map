{"version":3,"sources":["webpack:///./src/app/order/delivery-costs/delivery-costs.component.html","webpack:///./src/app/order/delivery-costs/delivery-costs.component.ts","webpack:///./src/app/order/order-items/order-items.component.html","webpack:///./src/app/order/order-items/order-items.component.ts","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/order.model.ts","webpack:///./src/app/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table\\\">\\n    <tbody><tr>\\n      <th style=\\\"width:50%\\\">Itens:</th>\\n      <td class=\\\"text-right\\\">{{itemsValue | currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Frete:</th>\\n      <td class=\\\"text-right\\\">{{delivery | currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Total:</th>\\n      <td class=\\\"text-right\\\">{{total() | currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n  </tbody></table>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mt-delivery-costs',\n  templateUrl: './delivery-costs.component.html'\n})\nexport class DeliveryCostsComponent implements OnInit {\n\n  @Input() delivery: number\n  @Input() itemsValue: number\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  total(): number {\n    return this.delivery + this.itemsValue\n  }\n\n}\n","module.exports = \"<div class=\\\"col-xs-12\\\" *ngIf=\\\"items.length === 0\\\">\\n  <p>\\n    Não há itens no seu carrinho. Que tal começar por <a [routerLink]=\\\"['/restaurants']\\\">aqui</a>?\\n  </p>\\n</div>\\n\\n<div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"items.length > 0\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"text-center\\\">Quantidade</th>\\n      <th>Item</th>\\n      <th>Descrição</th>\\n      <th class=\\\"text-right\\\">Subtotal</th>\\n      <th class=\\\"text-right\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let item of items\\\">\\n      <td class=\\\"text-center\\\">\\n        <a (click)=\\\"emitDecreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n        {{item.quantity}}\\n        <a (click)=\\\"emitIncreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n      </td>\\n      <td>{{item.menuItem.name}}</td>\\n\\n      <td>{{item.menuItem.description}}</td>\\n      <td class=\\\"text-right\\\">{{item.value() | currency: 'BRL': 'symbol'}}</td>\\n      <td class=\\\"text-right\\\">\\n        <a (click)=\\\"emitRemove(item)\\\" class=\\\"btn btn-sm danger\\\"><i class=\\\"fa fa-remove\\\"></i></a>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport {CartItem} from '../../restaurant-detail/shopping-cart/cart-item.model'\n\n@Component({\n  selector: 'mt-order-items',\n  templateUrl: './order-items.component.html'\n})\nexport class OrderItemsComponent implements OnInit {\n\n  @Input() items: CartItem[]\n\n  @Output() increaseQty = new EventEmitter<CartItem>()\n  @Output() decreaseQty = new EventEmitter<CartItem>()\n  @Output() remove = new EventEmitter<CartItem>()\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emitIncreaseQty(item: CartItem) {\n    this.increaseQty.emit(item)\n  }\n\n  emitDecreaseQty(item: CartItem) {\n    this.decreaseQty.emit(item)\n  }\n\n  emitRemove(item: CartItem) {\n    this.remove.emit(item)\n  }\n\n}\n","module.exports = \"<!--INICIO DO CONTEUDO-->\\n<section class=\\\"content-header\\\">\\n</section>\\n\\n<section class=\\\"content\\\">\\n  <section class=\\\"invoice\\\">\\n        <form [formGroup]=\\\"orderForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <h2 class=\\\"page-header\\\">\\n                <i class=\\\"fa fa-shopping-cart\\\"></i> Finalize o seu pedido\\n              </h2>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-9\\\">\\n              <p class=\\\"lead\\\">Seus Dados:</p>\\n            </div>\\n\\n            <div class=\\\"col-xs-12 col-sm-3\\\">\\n              <span class=\\\"help-block pull-right has-error-block\\\" *ngIf=\\\"orderForm.hasError('emailsNotMatch')\\\"><i class=\\\"fa fa-remove\\\"></i>E-mails não conferem</span>\\n            </div>\\n\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <mt-input-container errorMessage=\\\" Campo Obrigatório e com 5 caracteres\\\" label=\\\"Nome\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" autocomplete=\\\"off\\\" />\\n              </mt-input-container>\\n            </div>\\n\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\" E-mail inválido\\\" label=\\\"E-mail\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"E-mail\\\" autocomplete=\\\"off\\\" />\\n              </mt-input-container>\\n            </div>\\n\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\" E-mail inválido\\\" label=\\\"E-mail\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"emailConfirmation\\\" placeholder=\\\"Confirmação do e-mail\\\" autocomplete=\\\"off\\\" />\\n              </mt-input-container>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <p class=\\\"lead\\\">Endereço de Entrega:</p>\\n            </div>\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <mt-input-container errorMessage=\\\" Campo Obrigatório e com 5 caracteres\\\" label=\\\"Endereço\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Endereço\\\" autocomplete=\\\"off\\\" />\\n              </mt-input-container>\\n            </div>\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\" Obrigatório e somente números\\\" label=\\\"Número\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"number\\\" placeholder=\\\"Número\\\" pattern=\\\"^[0-9]*$\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optionalAddress\\\" placeholder=\\\"Complemento\\\">\\n              </mt-input-container>\\n            </div>\\n            <!-- /.col -->\\n          </div>\\n          <!-- /.row -->\\n\\n          <!-- Table row -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <p class=\\\"lead\\\">Itens do Pedido:</p>\\n            </div>\\n\\n            <mt-order-items [items]=\\\"cartItems()\\\"\\n                            (increaseQty)=\\\"increaseQty($event)\\\"\\n                            (decreaseQty)=\\\"decreaseQty($event)\\\"\\n                            (remove)=\\\"remove($event)\\\">\\n            </mt-order-items>\\n            <!-- /.col -->\\n          </div>\\n          <!-- /.row -->\\n\\n          <div class=\\\"row\\\">\\n            <!-- accepted payments column -->\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <p class=\\\"lead\\\">Formas de Pagamento:</p>\\n\\n                <div class=\\\"form-group\\\">\\n                    <mt-radio [options]=\\\"paymentOptions\\\" formControlName=\\\"paymentOption\\\"></mt-radio>\\n                </div>\\n\\n            </div>\\n            <!-- /.col -->\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <p class=\\\"lead\\\">Frete e Total:</p>\\n\\n              <mt-delivery-costs\\n                [delivery]=\\\"delivery\\\"\\n                [itemsValue]=\\\"itemsValue()\\\">\\n              </mt-delivery-costs>\\n            </div>\\n            <!-- /.col -->\\n          </div>\\n\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button (click)=\\\"checkOrder(orderForm.value)\\\" class=\\\"btn btn-success pull-right\\\"\\n                [disabled]=\\\"!orderForm.valid || cartItems().length === 0\\\">\\n              <i class=\\\"fa fa-credit-card\\\"></i> Concluir Pedido\\n            </button>\\n          </div>\\n        </div>\\n\\n    </section>\\n</section>\\n<!-- FIM DO CONTEUDO-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormBuilder, FormControl, Validators, AbstractControl} from '@angular/forms'\n\nimport { Router } from '@angular/router';\n\nimport {RadioOption} from '../shared/radio/radio-option.model'\nimport {OrderService} from './order.service'\nimport {CartItem} from '../restaurant-detail/shopping-cart/cart-item.model'\nimport {Order, OrderItem} from \"./order.model\"\n\nimport {tap} from 'rxjs/operators'\n\n@Component({\n  selector: 'mt-order',\n  templateUrl: './order.component.html'\n})\nexport class OrderComponent implements OnInit {\n\n  emailPattern = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\n  numberPattern = /^[0-9]*$/\n\n  orderForm: FormGroup\n\n  delivery: number = 8\n\n  orderId: string\n\n  paymentOptions: RadioOption[] = [\n    {label: 'Dinheiro', value: 'MON'},\n    {label: 'Cartão de Débito', value: 'DEB'},\n    {label: 'Cartão Refeição', value: 'REF'}\n\n  ]\n\n  constructor(private orderService: OrderService,\n              private router: Router,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.orderForm = new FormGroup({\n      name: new FormControl('', {\n        validators: [Validators.required, Validators.minLength(5)]\n      }),\n      email: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      emailConfirmation: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      address: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      number: this.formBuilder.control('', [Validators.required, Validators.pattern(this.numberPattern)]),\n      optionalAddress: this.formBuilder.control(''),\n      paymentOption: this.formBuilder.control('', [Validators.required])\n    }, {\n      validators: [OrderComponent.equalsTo], updateOn: 'blur'})\n  }\n\n  static equalsTo(group: AbstractControl) : {[key: string]: boolean} {\n    const email = group.get('email')\n    const emailConfirmation = group.get('emailConfirmation')\n    if(!email || !emailConfirmation) {\n      return undefined\n    }\n\n    if(email.value !== emailConfirmation.value) {\n      return {emailsNotMatch: true}\n    }\n    return undefined\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue()\n  }\n\n  cartItems(): CartItem[] {\n    return this.orderService.cartItems()\n  }\n\n  increaseQty(item: CartItem) {\n    this.orderService.increaseQty(item)\n  }\n\n  decreaseQty(item: CartItem) {\n    this.orderService.decreaseQty(item)\n  }\n\n  remove(item: CartItem) {\n    this.orderService.remove(item)\n  }\n\n  isOrderCompleted(): boolean {\n    return this.orderId !== undefined\n  }\n\n  checkOrder(order: Order) {\n    order.orderItems = this.cartItems()\n         .map((item:CartItem)=> new OrderItem(item.quantity, item.menuItem.id))\n    this.orderService.checkOrder(order)\n      .pipe(\n        tap((orderId: string) => {\n          this.orderId = orderId\n        })\n      ).subscribe((orderId: string) => {\n      this.router.navigate(['/order-summary'])\n      this.orderService.clear()\n    })\n  }\n\n}\n","class Order {\r\n  constructor(\r\n    public address: string,\r\n    public number: number,\r\n    public optionalAddress: string,\r\n    public paymentOption: string,\r\n    public orderItems: OrderItem[] = [],\r\n    public id?: string\r\n  ){}\r\n}\r\n\r\nclass OrderItem {\r\n  constructor(public quantity: number, public menuId: string){}\r\n}\r\n\r\nexport {Order, OrderItem}\r\n","import {NgModule} from \"@angular/core\"\r\nimport {RouterModule, Routes} from '@angular/router'\r\n\r\nimport {SharedModule} from '../shared/shared.module'\r\n\r\nimport {OrderComponent} from './order.component'\r\nimport {OrderItemsComponent} from './order-items/order-items.component'\r\nimport {DeliveryCostsComponent} from './delivery-costs/delivery-costs.component'\r\n\r\nimport {LeaveOrderGuard} from './leave-order.guard'\r\n\r\nconst ROUTES: Routes = [\r\n  {path: '', component: OrderComponent, canDeactivate: [LeaveOrderGuard]}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [OrderComponent, OrderItemsComponent, DeliveryCostsComponent],\r\n  imports: [SharedModule, RouterModule.forChild(ROUTES)]\r\n})\r\nexport class OrderModule {}\r\n"],"sourceRoot":""}